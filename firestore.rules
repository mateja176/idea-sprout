rules_version = '2';

function isSignedIn() {
  return request.auth != null;
}

function isAuthor() {
  return resource.data.author == request.auth.uid;
}

function isMine() {
  return isSignedIn() && isAuthor();
}

function canCreateIdea() {
  return request.resource.data.averageRating == 0 && request.resource.data.ratingCount == 0;
}

function doesNotUpdateRating() {
  return !('averageRating' in request.writeFields) && !('ratingCount' in request.writeFields);
}

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /ideas/{ideaId} {
      allow read: if isSignedIn() && (isAuthor() || resource.data.status == 'sprout');
      allow create: if isSignedIn() && canCreateIdea();
      allow update: if isMine() && doesNotUpdateRating();
    }
  }
}
